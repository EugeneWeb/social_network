{"version":3,"file":"static/js/658.16d65b8c.chunk.js","mappings":"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","sources":["webpack://myproj/./src/components/Users/Users.module.css?b9d0","webpack://myproj/./src/components/Users/User/User.module.css?cfea","components/Users/User/User.tsx","components/Users/UsersSearchForm/UsersSearch.tsx","components/Users/Users.tsx","webpack://myproj/./src/components/Users/UsersPage.module.css?569f","components/Users/UsersPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"users__items\":\"Users_users__items__kjRkX\",\"users\":\"Users_users__nng8B\",\"btn__wrapper\":\"Users_btn__wrapper__KzCLU\",\"hidden\":\"Users_hidden__YW1Eo\",\"noUsers\":\"Users_noUsers__OtkV4\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"User_item__kZJQd\",\"avatar\":\"User_avatar__-f6f1\",\"img__wrap\":\"User_img__wrap__LoBt0\",\"follow\":\"User_follow__RrJXp\",\"info\":\"User_info__CRXA6\",\"info__line\":\"User_info__line__nBflV\"};","\r\nimport { FC } from 'react';\r\nimport s from './User.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { ProfileType, UserType } from '../../../types/types';\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    follow: (userId: string) => void\r\n    unfollow: (userIt: string) => void\r\n    currentUser: ProfileType | null\r\n    followingInProgress: string[]\r\n}\r\nconst User:FC<PropsType> = ({user, follow, unfollow, currentUser, followingInProgress}) => {\r\n  return (\r\n    <li className={s.item}>\r\n                        <div className={s.avatar}>\r\n                            <div className={s.img__wrap}>\r\n                                <NavLink to={`/profile/${user._id}`}>\r\n                                    <img\r\n                                        src={user.photoUrl}\r\n                                        alt={`Фото ${user.fullname}`}\r\n                                    />\r\n                                </NavLink>\r\n                            </div>\r\n                            {currentUser!.following.some(\r\n                                (id) => id === user._id\r\n                            ) ? (\r\n                                <button\r\n                                    disabled={followingInProgress.some(\r\n                                        (id) => id === user._id\r\n                                    )}\r\n                                    onClick={() => {\r\n                                        unfollow(user._id);\r\n                                    }}\r\n                                    className={s.follow}\r\n                                >\r\n                                    Отписаться\r\n                                </button>\r\n                            ) : (\r\n                                <button\r\n                                    disabled={followingInProgress.some(\r\n                                        (id) => id === user._id\r\n                                    )}\r\n                                    onClick={() => {\r\n                                        follow(user._id);\r\n                                    }}\r\n                                    className={s.follow}\r\n                                >\r\n                                    Подписаться\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className={s.info}>\r\n                            <div className={s.info__line}>\r\n                                <p>{user.fullname}</p>\r\n                                <p\r\n                                >{`${user.location.country}, ${user.location.city}`}</p>\r\n                            </div>\r\n\r\n                            <div>{user.status}</div>\r\n                        </div>\r\n                    </li>\r\n  )\r\n}\r\n\r\nexport default User\r\n","import {\r\n    Field,\r\n    FormikErrors,\r\n    FormikHelpers,\r\n    FormikTouched,\r\n    useFormik,\r\n} from \"formik\";\r\nimport { FC } from \"react\";\r\nimport { FilterType } from \"../../../types/types\";\r\nimport * as yup from \"yup\";\r\nimport { Button, Col, Form, Input, Row, Select } from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\ntype UsersSearchProps = {\r\n    onFilterChange: (filter: FilterType) => void;\r\n    filter: FilterType;\r\n};\r\nexport const UsersSearch: FC<UsersSearchProps> = ({\r\n    onFilterChange,\r\n    filter,\r\n}) => {\r\n    const validationSchema = yup.object().shape({\r\n        term: yup.string().max(255, \"Число введенных символов превышает 255\"),\r\n    });\r\n\r\n    const formik = useFormik<FilterType>({\r\n        onSubmit(\r\n            values: FilterType,\r\n            { setSubmitting }: FormikHelpers<FilterType>\r\n        ) {\r\n            onFilterChange(values);\r\n            setSubmitting(false);\r\n        },\r\n        initialValues: {\r\n            friend: filter.friend || \"\",\r\n            term: filter.term || \"\",\r\n        },\r\n        validationSchema,\r\n        enableReinitialize: true,\r\n    });\r\n    const [form] = Form.useForm();\r\n\r\n    \r\n\r\n    form.setFieldsValue(formik.values);\r\n    return (\r\n        <Row justify=\"center\">\r\n            <Col span={24}>\r\n                <Form form={form} onFinish={formik.handleSubmit}>\r\n                    <Row justify=\"center\" gutter={0}>\r\n                        <Col span={10}>\r\n                            <Form.Item<FilterType>\r\n                                name=\"term\"\r\n                                validateStatus={\r\n                                    formik.errors.term && formik.touched.term\r\n                                        ? \"error\"\r\n                                        : \"\"\r\n                                }\r\n                                help={\r\n                                    formik.errors.term && formik.touched.term\r\n                                        ? formik.errors.term\r\n                                        : \"\"\r\n                                }\r\n                            >\r\n                                <Input\r\n                                    placeholder=\"Введите запрос\"\r\n                                    allowClear\r\n                                    onChange={(value) => {\r\n                                        formik.setFieldValue(\r\n                                            \"term\",\r\n                                            value.currentTarget.value\r\n                                        );\r\n                                    }}\r\n                                />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={3}>\r\n                            <Form.Item<FilterType> name=\"friend\">\r\n                                <Select\r\n                                    onChange={(value) => {\r\n                                        formik.setFieldValue(\"friend\", value);\r\n                                    }}\r\n                                >\r\n                                    <Select.Option value=\"\">Все</Select.Option>\r\n                                    <Select.Option value=\"show\">\r\n                                        Только друзья\r\n                                    </Select.Option>\r\n                                    <Select.Option value=\"noshow\">\r\n                                        Исключить друзей\r\n                                    </Select.Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n\r\n                        <Col>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                icon={<SearchOutlined />}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n","import { FC, useEffect } from \"react\";\r\nimport { Pagination } from \"antd\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nimport s from \"./Users.module.css\";\r\nimport User from \"./User/User\";\r\nimport { requestUsers } from \"../../redux/users-reducer\";\r\nimport { UsersSearch } from \"./UsersSearchForm/UsersSearch\";\r\nimport { follow, unfollow } from \"../../redux/authReducer\";\r\nimport { objectToQueryString } from \"../../api/api\";\r\nimport { FilterType } from \"../../types/types\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/redux\";\r\nimport { WithAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { WithRouter, WithRouterProps } from \"../common/WithRouter/WithRouter\";\r\n\r\ntype PropsType = {};\r\nconst Users: FC<PropsType & WithRouterProps> = ({location, navigate}) => {\r\n    const {users, currentPage, perPage, filter, totalCount, isFetching } = useAppSelector(state => state.usersPage);\r\n    const { followingInProgress } = useAppSelector(state => state.auth);\r\n    const currentUser = useAppSelector(state => state.auth.currentUser);\r\n\r\n\r\n    const dispatch = useAppDispatch()\r\n    const [searchParams] = useSearchParams();\r\n\r\n    useEffect(() => {\r\n        const {\r\n            page,\r\n            perPage: queryPerPage,\r\n            ...paramsObject\r\n        } = Object.fromEntries(searchParams.entries());\r\n\r\n        dispatch(requestUsers({perPage, currentPage: +page || 1, filter:paramsObject as FilterType}));\r\n    }, []);\r\n    useEffect(() => {\r\n        navigate({\r\n            pathname: location.pathname,\r\n            search: objectToQueryString({\r\n                page: currentPage,\r\n                perPage,\r\n                ...filter,\r\n            }),\r\n        });\r\n    }, [filter, currentPage]);\r\n\r\n    const onChangePage = (pageNum: number) => {\r\n        dispatch(requestUsers({perPage, currentPage: pageNum, filter}));\r\n    };\r\n    const onFilterChange = (filter: FilterType) => {\r\n        dispatch(requestUsers({perPage, currentPage:1, filter}));\r\n    };\r\n\r\n    const unfollowCallback = (userId: string) => {\r\n        dispatch(unfollow(userId));\r\n    };\r\n    const followCallback = (userId: string) => {\r\n        dispatch(follow(userId));\r\n    };\r\n\r\n    return (\r\n        <div className={[(isFetching ? s.hidden : \"\"), s.users].join('')}>\r\n            <UsersSearch filter={filter} onFilterChange={onFilterChange} />\r\n            {!users.length && (\r\n                <p className={s.noUsers}>\r\n                    Пользователи с такими данными не найдены.\r\n                </p>\r\n            )}\r\n\r\n            {!!users.length && (\r\n                <>\r\n                    <ul className={s.users__items}>\r\n                        {users.map((user) => (\r\n                            <User\r\n                                key={user._id}\r\n                                user={user}\r\n                                currentUser={currentUser}\r\n                                followingInProgress={followingInProgress}\r\n                                unfollow={unfollowCallback}\r\n                                follow={followCallback}\r\n                            />\r\n                        ))}\r\n                    </ul>\r\n\r\n                    <Pagination\r\n                        total={totalCount}\r\n                        defaultPageSize={perPage}\r\n                        defaultCurrent={currentPage}\r\n                        onChange={onChangePage}\r\n                        showSizeChanger={false}\r\n                    />\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n    WithAuthRedirect,\r\n    WithRouter<PropsType & WithRouterProps>\r\n)(\r\n    Users\r\n)","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"UsersPage_wrap__CQsm6\",\"users__title\":\"UsersPage_users__title__ZT5sG\"};","import { FC } from \"react\";\r\n\r\nimport Users from \"./Users\";\r\nimport s from \"./UsersPage.module.css\";\r\nimport { WithAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { Preloader } from \"../common/Preloader/Preloader\";\r\nimport { useAppSelector } from \"../../hooks/redux\";\r\n\r\ninterface PropsType {}\r\nexport const UsersPage: FC<PropsType> = () => {\r\n    const isFetching = useAppSelector(state => state.usersPage.isFetching)\r\n\r\n    return (\r\n        <div className={s.wrap}>\r\n             <h1 className={s.users__title}>Пользователи</h1>\r\n            {isFetching ? <Preloader /> : null}\r\n            <Users />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default WithAuthRedirect(UsersPage)\r\n"],"names":["_ref","user","follow","unfollow","currentUser","followingInProgress","_jsxs","className","s","children","_jsx","NavLink","to","concat","_id","src","photoUrl","alt","fullname","following","some","id","disabled","onClick","location","country","city","status","UsersSearch","onFilterChange","filter","validationSchema","yup","shape","term","max","formik","useFormik","onSubmit","values","_ref2","setSubmitting","initialValues","friend","enableReinitialize","_Form$useForm","Form","useForm","form","_slicedToArray","setFieldsValue","Row","justify","Col","span","onFinish","handleSubmit","gutter","Item","name","validateStatus","errors","touched","help","Input","placeholder","allowClear","onChange","value","setFieldValue","currentTarget","Select","Option","Button","type","htmlType","icon","SearchOutlined","compose","WithAuthRedirect","WithRouter","navigate","_useAppSelector","useAppSelector","state","usersPage","users","currentPage","perPage","totalCount","isFetching","auth","dispatch","useAppDispatch","_useSearchParams","useSearchParams","searchParams","useEffect","_Object$fromEntries","Object","fromEntries","entries","page","paramsObject","_objectWithoutProperties","_excluded","requestUsers","pathname","search","objectToQueryString","_objectSpread","unfollowCallback","userId","followCallback","hidden","join","length","noUsers","_Fragment","users__items","map","User","Pagination","total","defaultPageSize","defaultCurrent","pageNum","showSizeChanger","UsersPage","Preloader","Users"],"sourceRoot":""}